/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyphongkham;

import Entity.DonThuoc;
import java.awt.Color;
import util.Xjdbc;
import DAO.DonThuocDAO;
import DAO.PhieuKhamDAO;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import util.MsgBox;

/**
 *
 * @author ADMIN
 */
public class QuanLyDonThuoc extends javax.swing.JDialog {

    /**
     * Creates new form Doctor
     */
    public QuanLyDonThuoc(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.fillTable();
        this.fillComboBoxThuoc();
        this.fillComboBoxBS();
        panel.setBackground(new Color(0, 0, 0, 0));
        panel2.setBackground(new Color(0, 0, 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        tabThongTin = new javax.swing.JTabbedPane();
        panel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtMaDonThuoc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBacSi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLieuDung = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoThuoc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboThuoc = new javax.swing.JComboBox<>();
        btnThemThuoc = new javax.swing.JButton();
        cboBS = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThuoc = new javax.swing.JTable();
        panel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        lblBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(738, 932));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 660, 110, 50));

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 660, 110, 50));

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 660, 110, 50));

        btnAdd.setText("Thêm Mới");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 660, 110, 50));

        btnNew.setText("Nhập Mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        getContentPane().add(btnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 660, 100, 50));

        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Đơn Thuốc");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(13, 2, 890, 30);
        jPanel3.add(jSeparator1);
        jSeparator1.setBounds(3, 32, 890, 2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Mã Bác Sĩ Kê");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(20, 120, 120, 30);

        txtMaDonThuoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel3.add(txtMaDonThuoc);
        txtMaDonThuoc.setBounds(160, 60, 414, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mã Đơn Thuốc");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(20, 60, 130, 22);

        txtBacSi.setEditable(false);
        txtBacSi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel3.add(txtBacSi);
        txtBacSi.setBounds(160, 120, 130, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Liều dùng");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(20, 180, 110, 22);

        txtLieuDung.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel3.add(txtLieuDung);
        txtLieuDung.setBounds(160, 170, 410, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Số Thuốc");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(20, 240, 130, 30);

        txtSoThuoc.setEditable(false);
        txtSoThuoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel3.add(txtSoThuoc);
        txtSoThuoc.setBounds(160, 240, 50, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/bill medical 1.png"))); // NOI18N
        jPanel3.add(jLabel8);
        jLabel8.setBounds(650, 50, 210, 200);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Thuốc");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(240, 240, 70, 30);

        cboThuoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboThuocMouseClicked(evt);
            }
        });
        jPanel3.add(cboThuoc);
        cboThuoc.setBounds(310, 240, 160, 30);

        btnThemThuoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnThemThuoc.setText("Thêm");
        btnThemThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemThuocMouseClicked(evt);
            }
        });
        jPanel3.add(btnThemThuoc);
        btnThemThuoc.setBounds(490, 240, 80, 30);

        cboBS.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboBS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBSActionPerformed(evt);
            }
        });
        jPanel3.add(cboBS);
        cboBS.setBounds(310, 120, 160, 30);

        panel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 910, 310));

        tblThuoc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Thuốc", "Tên Thuốc", "Đơn Vị", "Hạn Sử Dụng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThuoc.setRowHeight(30);
        tblThuoc.setRowMargin(4);
        tblThuoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblThuocKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblThuocKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblThuoc);

        panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 910, 280));

        tabThongTin.addTab("Thông tin", panel);

        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDanhSach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Đơn Thuốc", "Mã Bác Sĩ", "Liều Dùng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSach.setRowHeight(30);
        tblDanhSach.setRowMargin(4);
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSach);

        panel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 610));

        tabThongTin.addTab("Danh Sách", panel2);

        getContentPane().add(tabThongTin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 910, 640));

        lblBackGround.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/vector-MAY-2020-112.jpg"))); // NOI18N
        getContentPane().add(lblBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 932, 738));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            tabThongTin.setSelectedIndex(0);
            this.row = tblDanhSach.getSelectedRow();
            try {
                this.edit();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        this.Clearform();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (checkform()) {
            if (checkInsert()) {

                this.insert();

            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (checkform()) {
            MsgBox.confirm(this, "Vui lòng không thay đổi mã đơn và mã bác sĩ kê thuốc khi cập nhật");
            this.update();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblThuocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblThuocKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tblThuocKeyTyped

    private void tblThuocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblThuocKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            int row = tblThuoc.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
            model.removeRow(row);
        }
    }//GEN-LAST:event_tblThuocKeyPressed

    private void cboThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboThuocMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cboThuocMouseClicked

    private void btnThemThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemThuocMouseClicked
        // TODO add your handling code here:
        fillTHuoc();
    }//GEN-LAST:event_btnThemThuocMouseClicked

    private void cboBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBSActionPerformed
        // TODO add your handling code here:
        txtBacSi.setText(String.valueOf(cboBS.getSelectedItem()));
    }//GEN-LAST:event_cboBSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyDonThuoc dialog = new QuanLyDonThuoc(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnThemThuoc;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboBS;
    private javax.swing.JComboBox<String> cboThuoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBackGround;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel2;
    private javax.swing.JTabbedPane tabThongTin;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTable tblThuoc;
    private javax.swing.JTextField txtBacSi;
    private javax.swing.JTextField txtLieuDung;
    private javax.swing.JTextField txtMaDonThuoc;
    private javax.swing.JTextField txtSoThuoc;
    // End of variables declaration//GEN-END:variables
 DonThuocDAO dao = new DonThuocDAO();
    PhieuKhamDAO pkdao = new PhieuKhamDAO();
    int row = -1;

    String INSERT_DonThuoc = "insert into DonThuoc(MaDT,MaBS,Lieudung) values(?,?,?)";
    String INSERT_ChiTietDonThuoc = "insert into Chitiet_DonThuoc_Thuoc(MaThuoc,MaDT) values(?,?)";
    String UPDATE_SQL = "update DonThuoc set MaBS=?,Lieudung=? where MaDT=?";
    String UPDATE_CT = "update Chitiet_DonThuoc_Thuoc set MaThuoc=? where MaDT=? and MaThuoc=?";
    String DELETE_DT = "delete from DonThuoc where MaDT=?";
    String DELETE_DTCT = "delete from Chitiet_DonThuoc_Thuoc  where MaDT=?";
    String SELECT_ALL_SQL = "select * from DonThuoc";

    public void insert() {
        try {
            Xjdbc.update(INSERT_DonThuoc, txtMaDonThuoc.getText(), txtBacSi.getText(), txtLieuDung.getText());

            int dem = tblThuoc.getRowCount();
            System.out.println(dem);
            int i;
            for (i = 0; i <= dem; i++) {
                Xjdbc.update(INSERT_ChiTietDonThuoc, tblThuoc.getValueAt(i, 0), txtMaDonThuoc.getText());
            }
            MsgBox.alert(this, "Thêm Thành Công");
        } catch (Exception e) {
            System.out.println(e);

        }

        fillTable();
        tabThongTin.setSelectedIndex(1);
    }

    public void update() {
        try {
            Xjdbc.update(UPDATE_SQL, txtBacSi.getText(), txtLieuDung.getText(), txtMaDonThuoc.getText());
            Xjdbc.update(DELETE_DTCT, txtMaDonThuoc.getText());
            int dem = tblThuoc.getRowCount();
            for (int i = 0; i <= dem; i++) {
                Xjdbc.update(INSERT_ChiTietDonThuoc, tblThuoc.getValueAt(i, 0), txtMaDonThuoc.getText());
            }
            //MsgBox.confirm(this, "Lưu ý! Không được thay đổi số thuốc của đơn thuốc,mọi chi tiết thay đổi trong danh sách thuốc sẽ không được thực thi.");
            MsgBox.alert(this, "Sửa thành công");
        } catch (Exception e) {
            System.out.println(e);

        }
        fillTable();
        tabThongTin.setSelectedIndex(1);
    }

    public void delete() {
        try{
              Xjdbc.update(DELETE_DTCT, txtMaDonThuoc.getText());
        Xjdbc.update(DELETE_DT, txtMaDonThuoc.getText());

        MsgBox.alert(this, "Xóa thành công!");
        Clearform();
        fillTable();
        }
      catch(Exception e){
          MsgBox.alert(this,"Xóa Thất Bại,Vui Lòng Xóa Phiếu Khám Sử Dụng Đơn Thuốc Này Trước!");
      }

    }

    public void Clearform() {
        txtBacSi.setText("");
        txtLieuDung.setText("");
        txtMaDonThuoc.setText("");
        txtSoThuoc.setText("");        
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
        model.setRowCount(0);
        try {
            List<DonThuoc> list = dao.selectALL();
            for (DonThuoc th : list) {
                Object[] row = {
                    th.getMaDT(),
                    th.getMaBS(),
                    th.getLieudung(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void setFrom(DonThuoc dt) throws SQLException {
        txtBacSi.setText(dt.getMaBS());
        txtLieuDung.setText(dt.getLieudung());
        txtMaDonThuoc.setText(dt.getMaDT());
//        loadData(dt.getMaDT());
        LoadDataThuoc();
        int lieudung = tblThuoc.getRowCount();
        txtSoThuoc.setText(String.valueOf(lieudung));

    }

    void edit() throws SQLException {
        String madt = (String) tblDanhSach.getValueAt(this.row, 0);
        DonThuoc dt = dao.selectById(madt);
        this.setFrom(dt);
    }

    void LoadDataThuoc() {
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        model.setRowCount(0);
        List<Object[]> list = pkdao.getdonthuoc((String) tblDanhSach.getValueAt(this.row, 0));
        for (Object[] row : list) {
            model.addRow(row);
        }
        tblThuoc.setModel(model);
    }

    public List<String> selectThuoc() {
        String sql = "select MaThuoc+ '-' +TenThuoc as Thuoc from Thuoc";
        List<String> list = new ArrayList<>();
        try {
            ResultSet rs = Xjdbc.query(sql);
            while (rs.next()) {
                list.add(rs.getString("Thuoc"));
            }
            rs.getStatement().getConnection().close();
            return list;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }

    }

    void fillComboBoxThuoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThuoc.getModel();
        model.removeAllElements();
        List<String> list = selectThuoc();
        for (String ma : list) {
            model.addElement(ma);
        }
    }

    void fillTHuoc() {
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        String index = (String) cboThuoc.getSelectedItem();
        String List[] = index.split("-");
        model.addRow(new Object[]{List[0], List[1], "", ""});
    }

    boolean checkform() {
        if (txtBacSi.getText().equals("")) {
            MsgBox.alert(this, "KHông được để trống mã bác sĩ kê thuốc!");
            return false;
        } else if (txtLieuDung.getText().equals("")) {
            MsgBox.alert(this, "KHông được để trống liều dùng!");
            return false;
        } else if (txtMaDonThuoc.getText().equals("")) {
            MsgBox.alert(this, "KHông được để trống mã đơn thuốc!");
            return false;
        } else if (tblThuoc.getRowCount() == 0) {
            MsgBox.alert(this, "Vui lòng chọn thuốc!");
            return false;
        }
        return true;
    }

    public List<String> selectID() {
        String sql = "select MaDT from DonThuoc";
        List<String> list = new ArrayList<>();
        try {
            ResultSet rs = Xjdbc.query(sql);
            while (rs.next()) {
                list.add(rs.getString("MaDT"));
            }
            rs.getStatement().getConnection().close();
            return list;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    public List<String> selectIDBS() {
        String sql = "select MaBS from BacSi";
        List<String> list = new ArrayList<>();
        try {
            ResultSet rs = Xjdbc.query(sql);
            while (rs.next()) {
                list.add(rs.getString("MaBS"));
            }
            rs.getStatement().getConnection().close();
            return list;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    boolean checkInsert() {
        List<String> list = selectID();
        for (String ma : list) {
            if (txtMaDonThuoc.getText().equalsIgnoreCase(ma)) {
                MsgBox.alert(this, "Mã đơn thuốc đã tồn tại!");
                return false;
            }
        }
        return true;
    }

 void fillComboBoxBS() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboBS.getModel();
        model.removeAllElements();
        List<String> list = selectIDBS();
        for (String ma : list) {
            model.addElement(ma);
        }
    }
}
